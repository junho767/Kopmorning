name: 개발 서버 배포

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create application-prod-secret.yml
        run: |
          echo "$APPLICATION_PROD_YML" > src/main/resources/application-secret.yml
        working-directory: backend
        env:
          APPLICATION_DEV_SECRET_YML: ${{ secrets.APPLICATION_PROD_YML }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Grant execute permission for gradlew
        working-directory: backend
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build
        working-directory: backend

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/kopmorning:latest .
        working-directory: backend

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/kopmorning:latest
        working-directory: backend

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy container on EC2
        run: |
          ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_HOST }} << EOF
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/kopmorning:latest
            docker stop kopmorning || true
            docker rm kopmorning || true
            docker run -d --name kopmorning -p 8080:8080 --restart always ${{ secrets.DOCKERHUB_USERNAME }}/kopmorning:latest
          EOF
