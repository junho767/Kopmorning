# todo : 추후에 배포 서버로 변경
name: 서버 배포

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --name redis_kopmorning
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create application-prod-secret.yml
        run: |
          echo "$APPLICATION_PROD_SECRET_YML" > src/main/resources/application-secret.yml
        working-directory: backend
        env:
          APPLICATION_PROD_SECRET_YML: ${{ secrets.APPLICATION_PROD_SECRET_YML }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Grant execute permission for gradlew
        working-directory: backend
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -Dspring.profiles.active=dev -i
        working-directory: backend

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/kopmorning:latest .
        working-directory: backend

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/kopmorning:latest
        working-directory: backend

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Remove existing files on EC2
        run: |
          ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_HOST }} "rm -f ~/myapp/.env ~/myapp/docker-compose.yml"    

      - name: Copy .env and docker-compose EC2
        run: |
          echo "${{ secrets.DOCKER_ENV_FILE }}" > .env
          scp -i ~/.ssh/id_rsa .env ubuntu@${{ secrets.EC2_HOST }}:~/myapp/.env
          echo "${{ secrets.DOCKER_COMPOSE_YML }}" > docker-compose.yml
          scp -i ~/.ssh/id_rsa docker-compose.yml ubuntu@${{ secrets.EC2_HOST }}:~/myapp/docker-compose.yml

      - name: Deploy with docker-compose on EC2
        run: |
          ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_HOST }} << EOF

          cd ~/myapp

          echo "[1] backend 컨테이너 중지 및 제거"
          docker compose stop backend || true
          docker compose rm -f backend || true

          echo "[2] backend 이미지 제거"
          docker rmi ${{ secrets.DOCKER_HUB_USERNAME }}/kopmorning:latest || true

          echo "[3] 최신 backend 이미지 pull"
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/kopmorning:latest

          echo "[4] backend 컨테이너만 다시 실행"
          docker compose up -d backend
          EOF
