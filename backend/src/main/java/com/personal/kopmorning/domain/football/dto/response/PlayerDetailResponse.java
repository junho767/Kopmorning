package com.personal.kopmorning.domain.football.dto.response;

import com.personal.kopmorning.domain.football.entity.Player;
import com.personal.kopmorning.domain.football.entity.PlayerStat;
import lombok.Data;

@Data
public class PlayerDetailResponse {
    private Long player_id;
    private Long team_id;
    private String player_name;
    private String player_complete_name;
    private String player_image;
    private String player_country;
    private String player_number;
    private String player_age;
    private String player_type;
    private String player_birthdate;
    private String matchPlayed;
    private String goals;
    private String yellowCards;
    private String redCards;
    private String injured;
    private String substituteOut;
    private String substitutesOnBench;
    private String assists;
    private String isCaptain;
    private String shotsTotal;
    private String goalsConceded;
    private String foulsCommitted;
    private String tackles;
    private String blocks;
    private String crossesTotal;
    private String interceptions;
    private String clearances;
    private String dispossesed;
    private String saves;
    private String insideBoxSaves;
    private String duelsTotal;
    private String duelsWon;
    private String dribbleAttempts;
    private String dribbleSucc;
    private String penComm;
    private String penWon;
    private String penScored;
    private String penMissed;
    private String passes;
    private String passesAccuracy;
    private String keyPasses;
    private String woordworks;
    private String rating;

    public PlayerDetailResponse(Player player, PlayerStat playerStat) {
        this.player_id = player.getId();
        this.team_id = player.getTeamId();
        this.player_name = player.getPlayer_name();
        this.player_complete_name = player.getPlayer_complete_name();
        this.player_image = player.getPlayer_image();
        this.player_country = player.getPlayer_country();
        this.player_number = player.getPlayer_number();
        this.player_age = player.getPlayer_age();
        this.player_type = player.getPlayer_type();
        this.player_birthdate = player.getPlayer_birthdate();
        this.matchPlayed = playerStat.getMatchPlayed();
        this.goals = playerStat.getGoals();
        this.yellowCards = playerStat.getYellowCards();
        this.redCards = playerStat.getRedCards();
        this.injured = playerStat.getInjured();
        this.substituteOut = playerStat.getSubstituteOut();
        this.substitutesOnBench = playerStat.getSubstitutesOnBench();
        this.assists = playerStat.getAssists();
        this.isCaptain = playerStat.getIsCaptain();
        this.shotsTotal = playerStat.getShotsTotal();
        this.goalsConceded = playerStat.getGoalsConceded();
        this.foulsCommitted = playerStat.getFoulsCommitted();
        this.tackles = playerStat.getTackles();
        this.blocks = playerStat.getBlocks();
        this.crossesTotal = playerStat.getCrossesTotal();
        this.interceptions = playerStat.getInterceptions();
        this.clearances = playerStat.getClearances();
        this.dispossesed = playerStat.getDispossesed();
        this.saves = playerStat.getSaves();
        this.insideBoxSaves = playerStat.getInsideBoxSaves();
        this.duelsTotal = playerStat.getDuelsTotal();
        this.duelsWon = playerStat.getDuelsWon();
        this.dribbleAttempts = playerStat.getDribbleAttempts();
        this.dribbleSucc = playerStat.getDribbleSucc();
        this.penComm = playerStat.getPenComm();
        this.penWon = playerStat.getPenWon();
        this.penScored = playerStat.getPenScored();
        this.penMissed = playerStat.getPenMissed();
        this.passes = playerStat.getPasses();
        this.passesAccuracy = playerStat.getPassesAccuracy();
        this.keyPasses = playerStat.getKeyPasses();
        this.woordworks = playerStat.getWoordworks();
        this.rating = playerStat.getRating();
    }
}
