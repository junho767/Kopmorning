import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { AuthProvider } from "./components/AuthContext";
import { cookies } from "next/headers";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const cookieStore = await cookies();
  const accessToken = cookieStore.get("accessToken");
  const isLoggedIn = !!accessToken;

  let user = null;
  if (isLoggedIn) {
    try {
      const res = await fetch("http://localhost:8080/api/member", {
        headers: { Cookie: `accessToken=${accessToken?.value}` },
        credentials: "include",
        cache: "no-store",
      });
      if (res.ok) {
        const data = await res.json();
        user = data.data;
      }
    } catch {
      user = null;
    }
  }

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <AuthProvider isLoggedIn={isLoggedIn} user={user}>
          {children}
        </AuthProvider>
      </body>
    </html>
  );
}
